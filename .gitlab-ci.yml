variables:
  JACOCO_CSV_LOCATION: 'spring/build/reports/jacoco/test/jacocoTestReport.csv'

# Define the stages of the CI pipeline
stages:
  - build
  - test_springboot
  - test_python

# Set environment variables or configuration options
variables:
  # Disable Gradle Daemon to avoid potential issues with CI environment
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# Define the build stage
build:
  stage: build
  image: eclipse-temurin
  # Script to execute for the build stage
  script:
    - cd spring
    # Execute Gradle build excluding tests
    - ./gradlew build -x test
  # Define artifacts to be preserved from this stage
  artifacts:
    paths:
      # Specify the path to the generated JAR file
      - spring/build/libs/*.jar

# Define the test stage for Spring Boot application
test_springboot:
  stage: test_springboot
  image: eclipse-temurin
  #regex to parse the test coverage artifact
  coverage: '/Total.*?([0-9]{1,3})%/'
  # Script to execute for the test stage
  script:
    - cd spring
    # Run Gradle tests
    - ./gradlew test
    # Calculate code coverage
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print "Total coverage:\s", 100*covered/instructions,  "%"}' build/reports/jacoco/test/jacocoTestReport.csv

  artifacts:
    paths:
      - spring/build/reports/jacoco/test/jacocoTestReport.csv
  # Ensure that the pipeline fails if any errors occur during testing
  rules:
    - when: always
      allow_failure: false

# Define the test stage for Python
test_python:
  stage: test_python
  image: selenium/standalone-chrome:latest
  # Script to execute for the test stage
  script:
    - sudo apt-get update && sudo apt-get install -y python3 python3-pip
    - pip3 install --upgrade pip
    - cd web-scraper
    - pip3 install -r requirements.txt --user
    - export PATH=$PATH:/home/seluser/.local/bin  # Add the local bin directory to PATH
    - pytest --cov=.
  # Ensure that the pipeline fails if any errors occur during testing
  rules:
    - when: always
      allow_failure: false
